{{#if hasPages}}
	{{#each pages key="id" as |item|}}
		<Ui::UiSpacer @size="100" id={{concat "page-spacer-" item.page.id}} />
		{{document/document-page
			expandState=expandState
			roles=roles
			pages=pages
			folder=folder
			folders=folders
			toEdit=toEdit
			blocks=blocks
			page=item.page
			meta=item.meta
			document=document
			pending=item.pending
			permissions=permissions
			attachments=attachments
			currentPageId=currentPageId
			refresh=(action refresh)
			onExpand=(action onExpand)
			onAttachmentUpload=(action onAttachmentUpload)
			onAttachmentDelete=(action onAttachmentDelete)
			onSavePage=(action "onSavePage")
			onCopyPage=(action "onCopyPage")
			onMovePage=(action "onMovePage")
			onDeletePage=(action "onDeletePage")
			onSavePageAsBlock=(action "onSavePageAsBlock")
			onPageLevelChange=(action onPageLevelChange)
			onPageSequenceChange=(action onPageSequenceChange)
			onShowSectionWizard=(action "onShowSectionWizard")}}
	{{/each}}
<script>
        function openBase64Image(base64URL){
                const base64ImageData = base64URL;
                const contentType = base64ImageData.substring(base64ImageData.indexOf(":")+1, base64ImageData.indexOf(";"));
                const byteCharacters = atob(base64ImageData.substr(`data:${contentType};base64,`.length));
                const byteArrays = [];
                for (let offset = 0; offset < byteCharacters.length; offset += 1024) {
                        const slice = byteCharacters.slice(offset, offset + 1024);
                        const byteNumbers = new Array(slice.length);
                        for (let i = 0; i < slice.length; i++) {
                                byteNumbers[i] = slice.charCodeAt(i);
                        }
                        const byteArray = new Uint8Array(byteNumbers);
                        byteArrays.push(byteArray);
                }
                const blob = new Blob(byteArrays, {type: contentType});
                const blobUrl = URL.createObjectURL(blob);
                window.open(blobUrl, '_blank');
        }
        $(".ember-view img").click(function() {
            var src = $(this).attr("src");
            openBase64Image(src);
        });
        $('.ember-view img').css('cursor', 'pointer');
        $('.ember-view img').css('max-width', '100%');
</script>
{{/if}}

{{#if canEdit}}
	<div class="start-section">
		<i class="dicon {{constants.Icon.Plus}}" {{action "onShowSectionWizard"}} title={{localize 'section_insert_here'}} role="button" tabindex="0" />
	</div>
{{/if}}

{{#if showLikes}}
	<div class="vote-box no-print">
		{{#if voteThanks}}
			<div class="thanks">{{localize 'feedback_thanks'}}</div>
		{{else}}
			<div class="prompt">{{folder.likes}}</div>
			<Ui::UiSpacer @size="200" />
			<div class="buttons">
				{{ui/ui-button color=constants.Color.Yellow light=true label=(localize 'feedback_help_yes') onClick=(action "onVote" 1)}}
				{{ui/ui-button-gap}}
				{{ui/ui-button color=constants.Color.Yellow light=true label=(localize 'feedback_help_no') onClick=(action "onVote" 2)}}
			</div>
		{{/if}}
	</div>
{{/if}}

{{#if canEdit}}
	{{document/add-section
		pages=pages
		blocks=blocks
		folder=folder
		toEdit=toEdit
		folders=folders
		sections=sections
		document=document
		permissions=permissions
		show=showInsertSectionModal
		beforePage=newSectionLocation
		onInsertSection=(action onInsertSection)}}
{{/if}}
